// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Persistance.Contexts;

namespace server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Server.Model.Entity.DeviceEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ipAddress")
                        .IsRequired()
                        .HasColumnName("IP")
                        .HasColumnType("text");

                    b.Property<bool?>("isNew")
                        .HasColumnName("IS_NEW")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("lastPing")
                        .HasColumnName("LAST_PING")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("macAddress")
                        .IsRequired()
                        .HasColumnName("MAC")
                        .HasColumnType("text");

                    b.Property<int>("type")
                        .HasColumnName("TYPE")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("DEVICE");
                });

            modelBuilder.Entity("Server.Model.Entity.DeviceEntity", b =>
                {
                    b.OwnsOne("Server.Model.Value.DeviceVersion", "version", b1 =>
                        {
                            b1.Property<int>("DeviceEntityid")
                                .HasColumnType("integer");

                            b1.Property<int>("major")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("MAJOR_VERSION")
                                .HasColumnType("integer")
                                .HasDefaultValue(0);

                            b1.Property<int>("minor")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("MINOR_VERSION")
                                .HasColumnType("integer")
                                .HasDefaultValue(0);

                            b1.Property<int>("patch")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("PATCH_VERSION")
                                .HasColumnType("integer")
                                .HasDefaultValue(0);

                            b1.HasKey("DeviceEntityid");

                            b1.ToTable("DEVICE");

                            b1.WithOwner()
                                .HasForeignKey("DeviceEntityid");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
